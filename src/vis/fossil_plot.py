import json
from pathlib import Path
import numpy as np

import streamlit as st
import pandas as pd
import plotly.graph_objects as go
import plotly.express as px
import plotly.io as pio

from ..data_io import get_data

# param_dict = {
#         "fossil_share_energy" : "Fossil fuel share",
#         "coal_consumption": "Primary energy consumption from coal",
#         "renewables_share_elec": "Share of electricity generated by renewables"
#     }

df_param = get_data("codebook")
df_shares = get_data("energy")
df_world = df_shares.loc["World"]

def create_figure(param: str = "fossil_share_energy", 
                  country: str = "Europe") -> go.Figure:

    df_country = df_shares.loc[country].dropna(subset=param)

    lookup_param = df_param.loc[param]
    title_str = lookup_param["description"].split("-")[0]
    suptitle_str = lookup_param["description"].split("-")[1].strip()

    source_annotation = go.layout.Annotation(
            showarrow=False,
            text=f"Data source {lookup_param['source']}",
            xref="paper",
            yref="paper",
            xanchor='left',
            x=0,
            yanchor='top',
            y=-0.1
        )
    layout = go.Layout(
        # paper_bgcolor="lightgrey",
        title={
            "text": f"{title_str}<br><sup style='font-weight: normal'>{suptitle_str}</sup>",
            "font_size": 20,
            "font_weight": "bold"
        },
        height=700,
        annotations=[source_annotation],
        yaxis={
            "title": lookup_param["unit"]
        },
        xaxis={
            "title": "Year"
        },
        legend={
            "title": "<b>Country</b>"
        },
        modebar={
            "orientation": "h",
            "remove": "toimage"
        },
        dragmode="pan"
    )

    # Hover template
    hovertemplate = "<b>%{x:%Y}</b><br>%{y:.2f} " +  f"{lookup_param["unit"]}" +  "<extra></extra>"
    
    # """
    # <b>%{x:%Y}</b><br>
    # %{customdata[0]}: %{y}
    # <extra></extra>
    # """
    # fig = go.Figure()
    fig = px.line(df_country.reset_index(), 
                  x="year", 
                  y=param, color="country")
    
    # fig.add_trace(px.line(df_world, x="year", y=param).data[0])
    fig.update_traces(customdata=np.stack(lookup_param["unit"]), hovertemplate=hovertemplate)
    fig.update_layout(layout)

    return fig


def parse_param(param: str) ->str:
    return df_param.loc[param, "description"]